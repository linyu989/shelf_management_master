"""
 @Author       :linyu
 @File         :shelf_alter.py
 @Description  :仓库进出货控制
 @Software     :PyCharm
"""

import numpy as np
import random
import copy

from sim_ani import animation

'''
完成仓库单个货物进出库,单个货物随机入库顺序出库,4个货物随机入库顺序出库操作
'''

class alterShelf():
    def __init__(self, alternate_dict_list, cells_shape, total_time, start_in, start_out, period):
        self.dict_list = alternate_dict_list
        self.map_shape = cells_shape
        self.map_shape_index = [self.map_shape[0] - 1, self.map_shape[1] - 1]

        self.total_time = total_time
        self.start_in = start_in
        self.start_out = start_out
        self.period = period
        self.dict_list_keys = list(self.dict_list.keys())

    # 索引移动
    def shelf_index_move(self, shelf_index):
        if shelf_index[0] <= self.map_shape_index[0]:
            if shelf_index[1] < self.map_shape_index[1]:
                shelf_index[0] += 1
            else:
                if shelf_index == self.map_shape_index:
                    shelf_index = [0, 0]
                else:
                    shelf_index[0] += 1
                    shelf_index[1] = 0

        return shelf_index

    # 单个顺序进出
    def unit_sequence(self):
        new_dict_list = self.dict_list

        in_shelf_index = [0, 0]
        out_shelf_index = [0, 0]
        mult_update_cell = []
        mult_update_cells = []
        in_shelf_list = []
        out_shelf_list = []
        flag = None
        in_count = 0
        out_count = 0
        len_keys = len(self.dict_list_keys)

        for time in range(self.total_time):
            # time从1开始
            time += 1
            if time == self.start_in or ((time > self.start_in) and (time - self.start_in) % self.period == 0):
                print(f'in_time is:{time}')
                if new_dict_list[str(in_shelf_index)][2] == 0:
                    print(f'in_shelf_index is {in_shelf_index}')
                    flag = 1
                    in_count += 1

                    new_dict_list[str(in_shelf_index)][2] = flag
                    mult_update_cell.append([in_shelf_index, flag])
                    if mult_update_cell:
                        mult_update_cells.append(str(mult_update_cell))
                    in_count = in_count if in_count < len_keys else 0
                    in_shelf_index = self.dict_list_keys[in_count]
                else:
                    print("该货架已满，无法入库")
            # 开始出货顺序
            if time == self.start_out or ((time > self.start_out) and (time - self.start_out) % self.period == 0):
                print(f'out_time is:{time}')
                if new_dict_list[str(out_shelf_index)][2] == 1:
                    print(f'out_shelf_index is {out_shelf_index}')
                    flag = 0
                    new_dict_list[str(out_shelf_index)][2] = flag
                    out_count += 1
                    mult_update_cell.append([out_shelf_index, flag])
                    if mult_update_cell:
                        mult_update_cells.append(str(mult_update_cell))
                    out_count = out_count if out_count < len_keys else 0
                    out_shelf_index = self.dict_list_keys[out_count]
                else:
                    print("该货架已空，无法出库")
            # 剩余不能满足一次时间周期则跳出循环
            if (self.total_time - time) < self.period: continue

        sequence_update_cells = []
        for seq_cell in mult_update_cells:
            sequence_update_cells.append(eval(seq_cell))

        return sequence_update_cells

    # 单个乱序进货顺序出货
    # random_length表示对某一长度进行填充
    # random_length不一定等于列数，可能小于也可能大于
    def unit_random_in(self, random_lenth):
        new_dict_list = self.dict_list

        in_shelf_index = []
        in_shelf_index_start = 0
        in_shelf_index_end = 0
        random_lenth_keys = []
        out_shelf_index = [0, 0]
        mult_update_cell = []
        mult_update_cells = []
        in_shelf_list = []
        out_shelf_list = []
        flag = None
        in_count = 0
        out_count = 0
        len_keys = len(self.dict_list_keys)

        for time in range(self.total_time):
            time += 1
            # 开始进货随机
            if time == self.start_in or ((time > self.start_in) and (time - self.start_in) % self.period == 0):
                print(f'in_time is:{time}')
                # 当列表为空才执行操作
                if len(random_lenth_keys) == 0:
                    in_shelf_index_start = in_shelf_index_start + in_count
                    in_shelf_index_end = in_shelf_index_start + random_lenth
                    random_lenth_keys = self.dict_list_keys[in_shelf_index_start:in_shelf_index_end]
                # index由random_length中随机选择
                in_shelf_index = random.choice(random_lenth_keys)

                if new_dict_list[str(in_shelf_index)][2] == 0:
                    print(f'in_shelf_index is {in_shelf_index}')
                    flag = 1
                    in_count += 1
                    new_dict_list[str(in_shelf_index)][2] = flag
                    mult_update_cell.append([in_shelf_index, flag])
                    if mult_update_cell:
                        mult_update_cells.append(str(mult_update_cell))
                    # 将已遍历的索引从列表中删除
                    random_lenth_keys.remove(str(in_shelf_index))
                    # in_count到达末尾重新开始循环
                    in_count = in_count if in_count < len_keys else 0
                    in_shelf_index_start = 0
                else:
                    print("该货架已满，无法入库")
            # 开始出货顺序
            if time == self.start_out or ((time > self.start_out) and (time - self.start_out) % self.period == 0):
                print(f'out_time is:{time}')
                if new_dict_list[str(out_shelf_index)][2] == 1:
                    print(f'out_shelf_index is {out_shelf_index}')
                    flag = 0
                    new_dict_list[str(out_shelf_index)][2] = flag
                    out_count += 1

                    mult_update_cell.append([out_shelf_index, flag])
                    if mult_update_cell:
                        mult_update_cells.append(str(mult_update_cell))
                    # 索引以至下一位
                    out_count = out_count if out_count < len_keys else 0
                    out_shelf_index = self.dict_list_keys[out_count]
                else:
                    print("该货架已空，无法出库")
            if (self.total_time - time) < self.period: continue

        sequence_update_cells = []
        for seq_cell in mult_update_cells:
            sequence_update_cells.append(eval(seq_cell))

        return sequence_update_cells

    # 4个乱序进货顺序出货
    # random_length不一定等于列数，可能小于但不能大于
    # 因为4个进出货即需要占用两行
    def mult_random_in(self, random_lenth):
        new_dict_list = self.dict_list

        in_shelf_index = []
        in_shelf_index_fir_list = []
        in_shelf_index_sec_list = []
        in_shelf_index_list = []
        in_shelf_index_start = 0
        in_shelf_index_end = 0
        random_lenth_keys = []

        [height, width] = self.map_shape
        for k in range(int(height / 2)):
            in_shelf_index_fir_list.append(self.dict_list_keys[int(width * 2 * k):int(width * (2 * k + 1))])
            in_shelf_index_sec_list.append(self.dict_list_keys[int(width * (2 * k + 1)):int(width * (2 * k + 2))])
        in_shelf_index_fir_list = list(np.array(in_shelf_index_fir_list).flatten())
        in_shelf_index_sec_list = list(np.array(in_shelf_index_sec_list).flatten())
        in_shelf_index_fir_random_list = []
        in_shelf_index_sec_random_list = []

        in_shelf_index_fir_fetch = []
        in_shelf_index_sec_fetch = []
        in_shelf_index_fetch = []
        out_shelf_index = [0, 0]
        out_shelf_index_fir = [0, 0]
        out_shelf_index_sec = [0, 0]

        out_shelf_index_list = []
        for k in range(0, int(len(in_shelf_index_fir_list)), 2):
            out_shelf_index_list.append(in_shelf_index_fir_list[k:k + 2] + in_shelf_index_sec_list[k:k + 2])

        mult_update_cell = []
        mult_update_cells = []
        in_shelf_list = []
        out_shelf_list = []
        flag = None
        in_count = 0
        out_count = 0
        # 对出货四个坐标是否有货累加
        out_index_true_count = 0
        len_keys = len(self.dict_list_keys)

        for time in range(self.total_time):
            time += 1
            # 开始进货随机
            if time == self.start_in or ((time > self.start_in) and (time - self.start_in) % self.period == 0):
                print(f'in_time is:{time}')
                if len(in_shelf_index_fir_random_list) == 0:
                    in_shelf_index_start = in_shelf_index_start + int(in_count / 2)
                    in_shelf_index_end = in_shelf_index_start + random_lenth
                    in_shelf_index_fir_random_list = in_shelf_index_fir_list[in_shelf_index_start:in_shelf_index_end]
                    in_shelf_index_sec_random_list = in_shelf_index_sec_list[in_shelf_index_start:in_shelf_index_end]

                in_shelf_index_fir_fetch = random.sample(in_shelf_index_fir_random_list, 2)
                in_shelf_index_sec_fetch = random.sample(in_shelf_index_sec_random_list, 2)
                in_shelf_index_fetch = in_shelf_index_fir_fetch + in_shelf_index_sec_fetch
                # 对四个元素遍历
                for in_shelf_index in in_shelf_index_fetch:
                    if new_dict_list[str(in_shelf_index)][2] == 0:
                        print(f'in_shelf_index is {in_shelf_index}')
                        flag = 1
                        in_count += 1

                        new_dict_list[str(in_shelf_index)][2] = flag
                        mult_update_cell.append([in_shelf_index, flag])
                        # 将已遍历的索引从对应列表中删除
                        if in_shelf_index in in_shelf_index_fir_random_list:
                            in_shelf_index_fir_random_list.remove(in_shelf_index)
                        if in_shelf_index in in_shelf_index_sec_random_list:
                            in_shelf_index_sec_random_list.remove(in_shelf_index)
                        # in_count到达末尾重新开始循环
                        in_count = in_count if in_count < len_keys else 0
                        in_shelf_index_start = 0
                    else:
                        print("该货架已满，无法入库")
                if mult_update_cell:
                    mult_update_cells.append(str(mult_update_cell))
            # 开始出货顺序
            if time == self.start_out or ((time > self.start_out) and (time - self.start_out) % self.period == 0):
                print(f'out_time is:{time}')
                # 表示在4个坐标为一单位的索引
                out_shelf_index_fetch = out_shelf_index_list[int(out_count / 4)]
                for out_shelf_index in out_shelf_index_fetch:
                    if new_dict_list[str(out_shelf_index)][2] == 1:
                        out_index_true_count += 1
                if out_index_true_count == 4:
                    # 四个坐标全部为空才进行填充
                    for out_shelf_index in out_shelf_index_fetch:
                        print(f'out_shelf_index is {out_shelf_index}')
                        flag = 0
                        new_dict_list[str(out_shelf_index)][2] = flag
                        out_count += 1
                        mult_update_cell.append([out_shelf_index, flag])
                        out_count = out_count if out_count < len_keys else 0
                    out_index_true_count = 0
                else:
                    print("该区域存在空货架，无法完成出库")
                if mult_update_cell:
                    mult_update_cells.append(str(mult_update_cell))
            if (self.total_time - time) < self.period: continue

        sequence_update_cells = []
        for seq_cell in mult_update_cells:
            sequence_update_cells.append(eval(seq_cell))

        return sequence_update_cells


if __name__ == '__main__':
    alternate_dict_list = {'[0, 0]': [[150, 150], [150, 150], 0], '[0, 1]': [[150, 300], [150, 150], 0],
                           '[0, 2]': [[150, 450], [150, 150], 0], '[0, 3]': [[150, 600], [150, 150], 0],
                           '[0, 4]': [[150, 750], [150, 150], 0], '[0, 5]': [[150, 900], [150, 150], 0],
                           '[0, 6]': [[150, 1050], [150, 150], 0], '[0, 7]': [[150, 1200], [150, 150], 0],
                           '[0, 8]': [[150, 1350], [150, 150], 0], '[0, 9]': [[150, 1500], [150, 150], 0],
                           '[0, 10]': [[150, 1650], [150, 150], 0], '[0, 11]': [[150, 1800], [150, 150], 0],
                           '[1, 0]': [[300, 150], [150, 150], 0], '[1, 1]': [[300, 300], [150, 150], 0],
                           '[1, 2]': [[300, 450], [150, 150], 0], '[1, 3]': [[300, 600], [150, 150], 0],
                           '[1, 4]': [[300, 750], [150, 150], 0], '[1, 5]': [[300, 900], [150, 150], 0],
                           '[1, 6]': [[300, 1050], [150, 150], 0], '[1, 7]': [[300, 1200], [150, 150], 0],
                           '[1, 8]': [[300, 1350], [150, 150], 0], '[1, 9]': [[300, 1500], [150, 150], 0],
                           '[1, 10]': [[300, 1650], [150, 150], 0], '[1, 11]': [[300, 1800], [150, 150], 0],
                           '[2, 0]': [[450, 150], [150, 150], 0], '[2, 1]': [[450, 300], [150, 150], 0],
                           '[2, 2]': [[450, 450], [150, 150], 0], '[2, 3]': [[450, 600], [150, 150], 0],
                           '[2, 4]': [[450, 750], [150, 150], 0], '[2, 5]': [[450, 900], [150, 150], 0],
                           '[2, 6]': [[450, 1050], [150, 150], 0], '[2, 7]': [[450, 1200], [150, 150], 0],
                           '[2, 8]': [[450, 1350], [150, 150], 0], '[2, 9]': [[450, 1500], [150, 150], 0],
                           '[2, 10]': [[450, 1650], [150, 150], 0], '[2, 11]': [[450, 1800], [150, 150], 0],
                           '[3, 0]': [[600, 150], [150, 150], 0], '[3, 1]': [[600, 300], [150, 150], 0],
                           '[3, 2]': [[600, 450], [150, 150], 0], '[3, 3]': [[600, 600], [150, 150], 0],
                           '[3, 4]': [[600, 750], [150, 150], 0], '[3, 5]': [[600, 900], [150, 150], 0],
                           '[3, 6]': [[600, 1050], [150, 150], 0], '[3, 7]': [[600, 1200], [150, 150], 0],
                           '[3, 8]': [[600, 1350], [150, 150], 0], '[3, 9]': [[600, 1500], [150, 150], 0],
                           '[3, 10]': [[600, 1650], [150, 150], 0], '[3, 11]': [[600, 1800], [150, 150], 0],
                           '[4, 0]': [[750, 150], [150, 150], 0], '[4, 1]': [[750, 300], [150, 150], 0],
                           '[4, 2]': [[750, 450], [150, 150], 0], '[4, 3]': [[750, 600], [150, 150], 0],
                           '[4, 4]': [[750, 750], [150, 150], 0], '[4, 5]': [[750, 900], [150, 150], 0],
                           '[4, 6]': [[750, 1050], [150, 150], 0], '[4, 7]': [[750, 1200], [150, 150], 0],
                           '[4, 8]': [[750, 1350], [150, 150], 0], '[4, 9]': [[750, 1500], [150, 150], 0],
                           '[4, 10]': [[750, 1650], [150, 150], 0], '[4, 11]': [[750, 1800], [150, 150], 0],
                           '[5, 0]': [[900, 150], [150, 150], 0], '[5, 1]': [[900, 300], [150, 150], 0],
                           '[5, 2]': [[900, 450], [150, 150], 0], '[5, 3]': [[900, 600], [150, 150], 0],
                           '[5, 4]': [[900, 750], [150, 150], 0], '[5, 5]': [[900, 900], [150, 150], 0],
                           '[5, 6]': [[900, 1050], [150, 150], 0], '[5, 7]': [[900, 1200], [150, 150], 0],
                           '[5, 8]': [[900, 1350], [150, 150], 0], '[5, 9]': [[900, 1500], [150, 150], 0],
                           '[5, 10]': [[900, 1650], [150, 150], 0], '[5, 11]': [[900, 1800], [150, 150], 0],
                           '[6, 0]': [[1050, 150], [150, 150], 0], '[6, 1]': [[1050, 300], [150, 150], 0],
                           '[6, 2]': [[1050, 450], [150, 150], 0], '[6, 3]': [[1050, 600], [150, 150], 0],
                           '[6, 4]': [[1050, 750], [150, 150], 0], '[6, 5]': [[1050, 900], [150, 150], 0],
                           '[6, 6]': [[1050, 1050], [150, 150], 0], '[6, 7]': [[1050, 1200], [150, 150], 0],
                           '[6, 8]': [[1050, 1350], [150, 150], 0], '[6, 9]': [[1050, 1500], [150, 150], 0],
                           '[6, 10]': [[1050, 1650], [150, 150], 0], '[6, 11]': [[1050, 1800], [150, 150], 0],
                           '[7, 0]': [[1200, 150], [150, 150], 0], '[7, 1]': [[1200, 300], [150, 150], 0],
                           '[7, 2]': [[1200, 450], [150, 150], 0], '[7, 3]': [[1200, 600], [150, 150], 0],
                           '[7, 4]': [[1200, 750], [150, 150], 0], '[7, 5]': [[1200, 900], [150, 150], 0],
                           '[7, 6]': [[1200, 1050], [150, 150], 0], '[7, 7]': [[1200, 1200], [150, 150], 0],
                           '[7, 8]': [[1200, 1350], [150, 150], 0], '[7, 9]': [[1200, 1500], [150, 150], 0],
                           '[7, 10]': [[1200, 1650], [150, 150], 0], '[7, 11]': [[1200, 1800], [150, 150], 0],
                           '[8, 0]': [[1350, 150], [150, 150], 0], '[8, 1]': [[1350, 300], [150, 150], 0],
                           '[8, 2]': [[1350, 450], [150, 150], 0], '[8, 3]': [[1350, 600], [150, 150], 0],
                           '[8, 4]': [[1350, 750], [150, 150], 0], '[8, 5]': [[1350, 900], [150, 150], 0],
                           '[8, 6]': [[1350, 1050], [150, 150], 0], '[8, 7]': [[1350, 1200], [150, 150], 0],
                           '[8, 8]': [[1350, 1350], [150, 150], 0], '[8, 9]': [[1350, 1500], [150, 150], 0],
                           '[8, 10]': [[1350, 1650], [150, 150], 0], '[8, 11]': [[1350, 1800], [150, 150], 0],
                           '[9, 0]': [[1500, 150], [150, 150], 0], '[9, 1]': [[1500, 300], [150, 150], 0],
                           '[9, 2]': [[1500, 450], [150, 150], 0], '[9, 3]': [[1500, 600], [150, 150], 0],
                           '[9, 4]': [[1500, 750], [150, 150], 0], '[9, 5]': [[1500, 900], [150, 150], 0],
                           '[9, 6]': [[1500, 1050], [150, 150], 0], '[9, 7]': [[1500, 1200], [150, 150], 0],
                           '[9, 8]': [[1500, 1350], [150, 150], 0], '[9, 9]': [[1500, 1500], [150, 150], 0],
                           '[9, 10]': [[1500, 1650], [150, 150], 0], '[9, 11]': [[1500, 1800], [150, 150], 0],
                           '[10, 0]': [[1650, 150], [150, 150], 0], '[10, 1]': [[1650, 300], [150, 150], 0],
                           '[10, 2]': [[1650, 450], [150, 150], 0], '[10, 3]': [[1650, 600], [150, 150], 0],
                           '[10, 4]': [[1650, 750], [150, 150], 0], '[10, 5]': [[1650, 900], [150, 150], 0],
                           '[10, 6]': [[1650, 1050], [150, 150], 0], '[10, 7]': [[1650, 1200], [150, 150], 0],
                           '[10, 8]': [[1650, 1350], [150, 150], 0], '[10, 9]': [[1650, 1500], [150, 150], 0],
                           '[10, 10]': [[1650, 1650], [150, 150], 0], '[10, 11]': [[1650, 1800], [150, 150], 0],
                           '[11, 0]': [[1800, 150], [150, 150], 0], '[11, 1]': [[1800, 300], [150, 150], 0],
                           '[11, 2]': [[1800, 450], [150, 150], 0], '[11, 3]': [[1800, 600], [150, 150], 0],
                           '[11, 4]': [[1800, 750], [150, 150], 0], '[11, 5]': [[1800, 900], [150, 150], 0],
                           '[11, 6]': [[1800, 1050], [150, 150], 0], '[11, 7]': [[1800, 1200], [150, 150], 0],
                           '[11, 8]': [[1800, 1350], [150, 150], 0], '[11, 9]': [[1800, 1500], [150, 150], 0],
                           '[11, 10]': [[1800, 1650], [150, 150], 0], '[11, 11]': [[1800, 1800], [150, 150], 0],
                           '[12, 0]': [[1950, 150], [150, 150], 0], '[12, 1]': [[1950, 300], [150, 150], 0],
                           '[12, 2]': [[1950, 450], [150, 150], 0], '[12, 3]': [[1950, 600], [150, 150], 0],
                           '[12, 4]': [[1950, 750], [150, 150], 0], '[12, 5]': [[1950, 900], [150, 150], 0],
                           '[12, 6]': [[1950, 1050], [150, 150], 0], '[12, 7]': [[1950, 1200], [150, 150], 0],
                           '[12, 8]': [[1950, 1350], [150, 150], 0], '[12, 9]': [[1950, 1500], [150, 150], 0],
                           '[12, 10]': [[1950, 1650], [150, 150], 0], '[12, 11]': [[1950, 1800], [150, 150], 0],
                           '[13, 0]': [[2100, 150], [150, 150], 0], '[13, 1]': [[2100, 300], [150, 150], 0],
                           '[13, 2]': [[2100, 450], [150, 150], 0], '[13, 3]': [[2100, 600], [150, 150], 0],
                           '[13, 4]': [[2100, 750], [150, 150], 0], '[13, 5]': [[2100, 900], [150, 150], 0],
                           '[13, 6]': [[2100, 1050], [150, 150], 0], '[13, 7]': [[2100, 1200], [150, 150], 0],
                           '[13, 8]': [[2100, 1350], [150, 150], 0], '[13, 9]': [[2100, 1500], [150, 150], 0],
                           '[13, 10]': [[2100, 1650], [150, 150], 0], '[13, 11]': [[2100, 1800], [150, 150], 0],
                           '[14, 0]': [[2250, 150], [150, 150], 0], '[14, 1]': [[2250, 300], [150, 150], 0],
                           '[14, 2]': [[2250, 450], [150, 150], 0], '[14, 3]': [[2250, 600], [150, 150], 0],
                           '[14, 4]': [[2250, 750], [150, 150], 0], '[14, 5]': [[2250, 900], [150, 150], 0],
                           '[14, 6]': [[2250, 1050], [150, 150], 0], '[14, 7]': [[2250, 1200], [150, 150], 0],
                           '[14, 8]': [[2250, 1350], [150, 150], 0], '[14, 9]': [[2250, 1500], [150, 150], 0],
                           '[14, 10]': [[2250, 1650], [150, 150], 0], '[14, 11]': [[2250, 1800], [150, 150], 0],
                           '[15, 0]': [[2400, 150], [150, 150], 0], '[15, 1]': [[2400, 300], [150, 150], 0],
                           '[15, 2]': [[2400, 450], [150, 150], 0], '[15, 3]': [[2400, 600], [150, 150], 0],
                           '[15, 4]': [[2400, 750], [150, 150], 0], '[15, 5]': [[2400, 900], [150, 150], 0],
                           '[15, 6]': [[2400, 1050], [150, 150], 0], '[15, 7]': [[2400, 1200], [150, 150], 0],
                           '[15, 8]': [[2400, 1350], [150, 150], 0], '[15, 9]': [[2400, 1500], [150, 150], 0],
                           '[15, 10]': [[2400, 1650], [150, 150], 0], '[15, 11]': [[2400, 1800], [150, 150], 0],
                           '[16, 0]': [[2550, 150], [150, 150], 0], '[16, 1]': [[2550, 300], [150, 150], 0],
                           '[16, 2]': [[2550, 450], [150, 150], 0], '[16, 3]': [[2550, 600], [150, 150], 0],
                           '[16, 4]': [[2550, 750], [150, 150], 0], '[16, 5]': [[2550, 900], [150, 150], 0],
                           '[16, 6]': [[2550, 1050], [150, 150], 0], '[16, 7]': [[2550, 1200], [150, 150], 0],
                           '[16, 8]': [[2550, 1350], [150, 150], 0], '[16, 9]': [[2550, 1500], [150, 150], 0],
                           '[16, 10]': [[2550, 1650], [150, 150], 0], '[16, 11]': [[2550, 1800], [150, 150], 0],
                           '[17, 0]': [[2700, 150], [150, 150], 0], '[17, 1]': [[2700, 300], [150, 150], 0],
                           '[17, 2]': [[2700, 450], [150, 150], 0], '[17, 3]': [[2700, 600], [150, 150], 0],
                           '[17, 4]': [[2700, 750], [150, 150], 0], '[17, 5]': [[2700, 900], [150, 150], 0],
                           '[17, 6]': [[2700, 1050], [150, 150], 0], '[17, 7]': [[2700, 1200], [150, 150], 0],
                           '[17, 8]': [[2700, 1350], [150, 150], 0], '[17, 9]': [[2700, 1500], [150, 150], 0],
                           '[17, 10]': [[2700, 1650], [150, 150], 0], '[17, 11]': [[2700, 1800], [150, 150], 0],
                           '[18, 0]': [[2850, 150], [150, 150], 0], '[18, 1]': [[2850, 300], [150, 150], 0],
                           '[18, 2]': [[2850, 450], [150, 150], 0], '[18, 3]': [[2850, 600], [150, 150], 0],
                           '[18, 4]': [[2850, 750], [150, 150], 0], '[18, 5]': [[2850, 900], [150, 150], 0],
                           '[18, 6]': [[2850, 1050], [150, 150], 0], '[18, 7]': [[2850, 1200], [150, 150], 0],
                           '[18, 8]': [[2850, 1350], [150, 150], 0], '[18, 9]': [[2850, 1500], [150, 150], 0],
                           '[18, 10]': [[2850, 1650], [150, 150], 0], '[18, 11]': [[2850, 1800], [150, 150], 0],
                           '[19, 0]': [[3000, 150], [150, 150], 0], '[19, 1]': [[3000, 300], [150, 150], 0],
                           '[19, 2]': [[3000, 450], [150, 150], 0], '[19, 3]': [[3000, 600], [150, 150], 0],
                           '[19, 4]': [[3000, 750], [150, 150], 0], '[19, 5]': [[3000, 900], [150, 150], 0],
                           '[19, 6]': [[3000, 1050], [150, 150], 0], '[19, 7]': [[3000, 1200], [150, 150], 0],
                           '[19, 8]': [[3000, 1350], [150, 150], 0], '[19, 9]': [[3000, 1500], [150, 150], 0],
                           '[19, 10]': [[3000, 1650], [150, 150], 0], '[19, 11]': [[3000, 1800], [150, 150], 0],
                           '[20, 0]': [[3150, 150], [150, 150], 0], '[20, 1]': [[3150, 300], [150, 150], 0],
                           '[20, 2]': [[3150, 450], [150, 150], 0], '[20, 3]': [[3150, 600], [150, 150], 0],
                           '[20, 4]': [[3150, 750], [150, 150], 0], '[20, 5]': [[3150, 900], [150, 150], 0],
                           '[20, 6]': [[3150, 1050], [150, 150], 0], '[20, 7]': [[3150, 1200], [150, 150], 0],
                           '[20, 8]': [[3150, 1350], [150, 150], 0], '[20, 9]': [[3150, 1500], [150, 150], 0],
                           '[20, 10]': [[3150, 1650], [150, 150], 0], '[20, 11]': [[3150, 1800], [150, 150], 0],
                           '[21, 0]': [[3300, 150], [150, 150], 0], '[21, 1]': [[3300, 300], [150, 150], 0],
                           '[21, 2]': [[3300, 450], [150, 150], 0], '[21, 3]': [[3300, 600], [150, 150], 0],
                           '[21, 4]': [[3300, 750], [150, 150], 0], '[21, 5]': [[3300, 900], [150, 150], 0],
                           '[21, 6]': [[3300, 1050], [150, 150], 0], '[21, 7]': [[3300, 1200], [150, 150], 0],
                           '[21, 8]': [[3300, 1350], [150, 150], 0], '[21, 9]': [[3300, 1500], [150, 150], 0],
                           '[21, 10]': [[3300, 1650], [150, 150], 0], '[21, 11]': [[3300, 1800], [150, 150], 0],
                           '[22, 0]': [[3450, 150], [150, 150], 0], '[22, 1]': [[3450, 300], [150, 150], 0],
                           '[22, 2]': [[3450, 450], [150, 150], 0], '[22, 3]': [[3450, 600], [150, 150], 0],
                           '[22, 4]': [[3450, 750], [150, 150], 0], '[22, 5]': [[3450, 900], [150, 150], 0],
                           '[22, 6]': [[3450, 1050], [150, 150], 0], '[22, 7]': [[3450, 1200], [150, 150], 0],
                           '[22, 8]': [[3450, 1350], [150, 150], 0], '[22, 9]': [[3450, 1500], [150, 150], 0],
                           '[22, 10]': [[3450, 1650], [150, 150], 0], '[22, 11]': [[3450, 1800], [150, 150], 0],
                           '[23, 0]': [[3600, 150], [150, 150], 0], '[23, 1]': [[3600, 300], [150, 150], 0],
                           '[23, 2]': [[3600, 450], [150, 150], 0], '[23, 3]': [[3600, 600], [150, 150], 0],
                           '[23, 4]': [[3600, 750], [150, 150], 0], '[23, 5]': [[3600, 900], [150, 150], 0],
                           '[23, 6]': [[3600, 1050], [150, 150], 0], '[23, 7]': [[3600, 1200], [150, 150], 0],
                           '[23, 8]': [[3600, 1350], [150, 150], 0], '[23, 9]': [[3600, 1500], [150, 150], 0],
                           '[23, 10]': [[3600, 1650], [150, 150], 0], '[23, 11]': [[3600, 1800], [150, 150], 0]}
    alternate_dict_list_bak = {'[0, 0]': [[150, 150], [150, 150], 0], '[0, 1]': [[150, 300], [150, 150], 0],
                               '[0, 2]': [[150, 450], [150, 150], 0], '[0, 3]': [[150, 600], [150, 150], 0],
                               '[0, 4]': [[150, 750], [150, 150], 0], '[0, 5]': [[150, 900], [150, 150], 0],
                               '[0, 6]': [[150, 1050], [150, 150], 0], '[0, 7]': [[150, 1200], [150, 150], 0],
                               '[0, 8]': [[150, 1350], [150, 150], 0], '[0, 9]': [[150, 1500], [150, 150], 0],
                               '[0, 10]': [[150, 1650], [150, 150], 0], '[0, 11]': [[150, 1800], [150, 150], 0],
                               '[1, 0]': [[300, 150], [150, 150], 0], '[1, 1]': [[300, 300], [150, 150], 0],
                               '[1, 2]': [[300, 450], [150, 150], 0], '[1, 3]': [[300, 600], [150, 150], 0],
                               '[1, 4]': [[300, 750], [150, 150], 0], '[1, 5]': [[300, 900], [150, 150], 0],
                               '[1, 6]': [[300, 1050], [150, 150], 0], '[1, 7]': [[300, 1200], [150, 150], 0],
                               '[1, 8]': [[300, 1350], [150, 150], 0], '[1, 9]': [[300, 1500], [150, 150], 0],
                               '[1, 10]': [[300, 1650], [150, 150], 0], '[1, 11]': [[300, 1800], [150, 150], 0],
                               '[2, 0]': [[450, 150], [150, 150], 0], '[2, 1]': [[450, 300], [150, 150], 0],
                               '[2, 2]': [[450, 450], [150, 150], 0], '[2, 3]': [[450, 600], [150, 150], 0],
                               '[2, 4]': [[450, 750], [150, 150], 0], '[2, 5]': [[450, 900], [150, 150], 0],
                               '[2, 6]': [[450, 1050], [150, 150], 0], '[2, 7]': [[450, 1200], [150, 150], 0],
                               '[2, 8]': [[450, 1350], [150, 150], 0], '[2, 9]': [[450, 1500], [150, 150], 0],
                               '[2, 10]': [[450, 1650], [150, 150], 0], '[2, 11]': [[450, 1800], [150, 150], 0],
                               '[3, 0]': [[600, 150], [150, 150], 0], '[3, 1]': [[600, 300], [150, 150], 0],
                               '[3, 2]': [[600, 450], [150, 150], 0], '[3, 3]': [[600, 600], [150, 150], 0],
                               '[3, 4]': [[600, 750], [150, 150], 0], '[3, 5]': [[600, 900], [150, 150], 0],
                               '[3, 6]': [[600, 1050], [150, 150], 0], '[3, 7]': [[600, 1200], [150, 150], 0],
                               '[3, 8]': [[600, 1350], [150, 150], 0], '[3, 9]': [[600, 1500], [150, 150], 0],
                               '[3, 10]': [[600, 1650], [150, 150], 0], '[3, 11]': [[600, 1800], [150, 150], 0],
                               '[4, 0]': [[750, 150], [150, 150], 0], '[4, 1]': [[750, 300], [150, 150], 0],
                               '[4, 2]': [[750, 450], [150, 150], 0], '[4, 3]': [[750, 600], [150, 150], 0],
                               '[4, 4]': [[750, 750], [150, 150], 0], '[4, 5]': [[750, 900], [150, 150], 0],
                               '[4, 6]': [[750, 1050], [150, 150], 0], '[4, 7]': [[750, 1200], [150, 150], 0],
                               '[4, 8]': [[750, 1350], [150, 150], 0], '[4, 9]': [[750, 1500], [150, 150], 0],
                               '[4, 10]': [[750, 1650], [150, 150], 0], '[4, 11]': [[750, 1800], [150, 150], 0],
                               '[5, 0]': [[900, 150], [150, 150], 0], '[5, 1]': [[900, 300], [150, 150], 0],
                               '[5, 2]': [[900, 450], [150, 150], 0], '[5, 3]': [[900, 600], [150, 150], 0],
                               '[5, 4]': [[900, 750], [150, 150], 0], '[5, 5]': [[900, 900], [150, 150], 0],
                               '[5, 6]': [[900, 1050], [150, 150], 0], '[5, 7]': [[900, 1200], [150, 150], 0],
                               '[5, 8]': [[900, 1350], [150, 150], 0], '[5, 9]': [[900, 1500], [150, 150], 0],
                               '[5, 10]': [[900, 1650], [150, 150], 0], '[5, 11]': [[900, 1800], [150, 150], 0],
                               '[6, 0]': [[1050, 150], [150, 150], 0], '[6, 1]': [[1050, 300], [150, 150], 0],
                               '[6, 2]': [[1050, 450], [150, 150], 0], '[6, 3]': [[1050, 600], [150, 150], 0],
                               '[6, 4]': [[1050, 750], [150, 150], 0], '[6, 5]': [[1050, 900], [150, 150], 0],
                               '[6, 6]': [[1050, 1050], [150, 150], 0], '[6, 7]': [[1050, 1200], [150, 150], 0],
                               '[6, 8]': [[1050, 1350], [150, 150], 0], '[6, 9]': [[1050, 1500], [150, 150], 0],
                               '[6, 10]': [[1050, 1650], [150, 150], 0], '[6, 11]': [[1050, 1800], [150, 150], 0],
                               '[7, 0]': [[1200, 150], [150, 150], 0], '[7, 1]': [[1200, 300], [150, 150], 0],
                               '[7, 2]': [[1200, 450], [150, 150], 0], '[7, 3]': [[1200, 600], [150, 150], 0],
                               '[7, 4]': [[1200, 750], [150, 150], 0], '[7, 5]': [[1200, 900], [150, 150], 0],
                               '[7, 6]': [[1200, 1050], [150, 150], 0], '[7, 7]': [[1200, 1200], [150, 150], 0],
                               '[7, 8]': [[1200, 1350], [150, 150], 0], '[7, 9]': [[1200, 1500], [150, 150], 0],
                               '[7, 10]': [[1200, 1650], [150, 150], 0], '[7, 11]': [[1200, 1800], [150, 150], 0],
                               '[8, 0]': [[1350, 150], [150, 150], 0], '[8, 1]': [[1350, 300], [150, 150], 0],
                               '[8, 2]': [[1350, 450], [150, 150], 0], '[8, 3]': [[1350, 600], [150, 150], 0],
                               '[8, 4]': [[1350, 750], [150, 150], 0], '[8, 5]': [[1350, 900], [150, 150], 0],
                               '[8, 6]': [[1350, 1050], [150, 150], 0], '[8, 7]': [[1350, 1200], [150, 150], 0],
                               '[8, 8]': [[1350, 1350], [150, 150], 0], '[8, 9]': [[1350, 1500], [150, 150], 0],
                               '[8, 10]': [[1350, 1650], [150, 150], 0], '[8, 11]': [[1350, 1800], [150, 150], 0],
                               '[9, 0]': [[1500, 150], [150, 150], 0], '[9, 1]': [[1500, 300], [150, 150], 0],
                               '[9, 2]': [[1500, 450], [150, 150], 0], '[9, 3]': [[1500, 600], [150, 150], 0],
                               '[9, 4]': [[1500, 750], [150, 150], 0], '[9, 5]': [[1500, 900], [150, 150], 0],
                               '[9, 6]': [[1500, 1050], [150, 150], 0], '[9, 7]': [[1500, 1200], [150, 150], 0],
                               '[9, 8]': [[1500, 1350], [150, 150], 0], '[9, 9]': [[1500, 1500], [150, 150], 0],
                               '[9, 10]': [[1500, 1650], [150, 150], 0], '[9, 11]': [[1500, 1800], [150, 150], 0],
                               '[10, 0]': [[1650, 150], [150, 150], 0], '[10, 1]': [[1650, 300], [150, 150], 0],
                               '[10, 2]': [[1650, 450], [150, 150], 0], '[10, 3]': [[1650, 600], [150, 150], 0],
                               '[10, 4]': [[1650, 750], [150, 150], 0], '[10, 5]': [[1650, 900], [150, 150], 0],
                               '[10, 6]': [[1650, 1050], [150, 150], 0], '[10, 7]': [[1650, 1200], [150, 150], 0],
                               '[10, 8]': [[1650, 1350], [150, 150], 0], '[10, 9]': [[1650, 1500], [150, 150], 0],
                               '[10, 10]': [[1650, 1650], [150, 150], 0], '[10, 11]': [[1650, 1800], [150, 150], 0],
                               '[11, 0]': [[1800, 150], [150, 150], 0], '[11, 1]': [[1800, 300], [150, 150], 0],
                               '[11, 2]': [[1800, 450], [150, 150], 0], '[11, 3]': [[1800, 600], [150, 150], 0],
                               '[11, 4]': [[1800, 750], [150, 150], 0], '[11, 5]': [[1800, 900], [150, 150], 0],
                               '[11, 6]': [[1800, 1050], [150, 150], 0], '[11, 7]': [[1800, 1200], [150, 150], 0],
                               '[11, 8]': [[1800, 1350], [150, 150], 0], '[11, 9]': [[1800, 1500], [150, 150], 0],
                               '[11, 10]': [[1800, 1650], [150, 150], 0], '[11, 11]': [[1800, 1800], [150, 150], 0],
                               '[12, 0]': [[1950, 150], [150, 150], 0], '[12, 1]': [[1950, 300], [150, 150], 0],
                               '[12, 2]': [[1950, 450], [150, 150], 0], '[12, 3]': [[1950, 600], [150, 150], 0],
                               '[12, 4]': [[1950, 750], [150, 150], 0], '[12, 5]': [[1950, 900], [150, 150], 0],
                               '[12, 6]': [[1950, 1050], [150, 150], 0], '[12, 7]': [[1950, 1200], [150, 150], 0],
                               '[12, 8]': [[1950, 1350], [150, 150], 0], '[12, 9]': [[1950, 1500], [150, 150], 0],
                               '[12, 10]': [[1950, 1650], [150, 150], 0], '[12, 11]': [[1950, 1800], [150, 150], 0],
                               '[13, 0]': [[2100, 150], [150, 150], 0], '[13, 1]': [[2100, 300], [150, 150], 0],
                               '[13, 2]': [[2100, 450], [150, 150], 0], '[13, 3]': [[2100, 600], [150, 150], 0],
                               '[13, 4]': [[2100, 750], [150, 150], 0], '[13, 5]': [[2100, 900], [150, 150], 0],
                               '[13, 6]': [[2100, 1050], [150, 150], 0], '[13, 7]': [[2100, 1200], [150, 150], 0],
                               '[13, 8]': [[2100, 1350], [150, 150], 0], '[13, 9]': [[2100, 1500], [150, 150], 0],
                               '[13, 10]': [[2100, 1650], [150, 150], 0], '[13, 11]': [[2100, 1800], [150, 150], 0],
                               '[14, 0]': [[2250, 150], [150, 150], 0], '[14, 1]': [[2250, 300], [150, 150], 0],
                               '[14, 2]': [[2250, 450], [150, 150], 0], '[14, 3]': [[2250, 600], [150, 150], 0],
                               '[14, 4]': [[2250, 750], [150, 150], 0], '[14, 5]': [[2250, 900], [150, 150], 0],
                               '[14, 6]': [[2250, 1050], [150, 150], 0], '[14, 7]': [[2250, 1200], [150, 150], 0],
                               '[14, 8]': [[2250, 1350], [150, 150], 0], '[14, 9]': [[2250, 1500], [150, 150], 0],
                               '[14, 10]': [[2250, 1650], [150, 150], 0], '[14, 11]': [[2250, 1800], [150, 150], 0],
                               '[15, 0]': [[2400, 150], [150, 150], 0], '[15, 1]': [[2400, 300], [150, 150], 0],
                               '[15, 2]': [[2400, 450], [150, 150], 0], '[15, 3]': [[2400, 600], [150, 150], 0],
                               '[15, 4]': [[2400, 750], [150, 150], 0], '[15, 5]': [[2400, 900], [150, 150], 0],
                               '[15, 6]': [[2400, 1050], [150, 150], 0], '[15, 7]': [[2400, 1200], [150, 150], 0],
                               '[15, 8]': [[2400, 1350], [150, 150], 0], '[15, 9]': [[2400, 1500], [150, 150], 0],
                               '[15, 10]': [[2400, 1650], [150, 150], 0], '[15, 11]': [[2400, 1800], [150, 150], 0],
                               '[16, 0]': [[2550, 150], [150, 150], 0], '[16, 1]': [[2550, 300], [150, 150], 0],
                               '[16, 2]': [[2550, 450], [150, 150], 0], '[16, 3]': [[2550, 600], [150, 150], 0],
                               '[16, 4]': [[2550, 750], [150, 150], 0], '[16, 5]': [[2550, 900], [150, 150], 0],
                               '[16, 6]': [[2550, 1050], [150, 150], 0], '[16, 7]': [[2550, 1200], [150, 150], 0],
                               '[16, 8]': [[2550, 1350], [150, 150], 0], '[16, 9]': [[2550, 1500], [150, 150], 0],
                               '[16, 10]': [[2550, 1650], [150, 150], 0], '[16, 11]': [[2550, 1800], [150, 150], 0],
                               '[17, 0]': [[2700, 150], [150, 150], 0], '[17, 1]': [[2700, 300], [150, 150], 0],
                               '[17, 2]': [[2700, 450], [150, 150], 0], '[17, 3]': [[2700, 600], [150, 150], 0],
                               '[17, 4]': [[2700, 750], [150, 150], 0], '[17, 5]': [[2700, 900], [150, 150], 0],
                               '[17, 6]': [[2700, 1050], [150, 150], 0], '[17, 7]': [[2700, 1200], [150, 150], 0],
                               '[17, 8]': [[2700, 1350], [150, 150], 0], '[17, 9]': [[2700, 1500], [150, 150], 0],
                               '[17, 10]': [[2700, 1650], [150, 150], 0], '[17, 11]': [[2700, 1800], [150, 150], 0],
                               '[18, 0]': [[2850, 150], [150, 150], 0], '[18, 1]': [[2850, 300], [150, 150], 0],
                               '[18, 2]': [[2850, 450], [150, 150], 0], '[18, 3]': [[2850, 600], [150, 150], 0],
                               '[18, 4]': [[2850, 750], [150, 150], 0], '[18, 5]': [[2850, 900], [150, 150], 0],
                               '[18, 6]': [[2850, 1050], [150, 150], 0], '[18, 7]': [[2850, 1200], [150, 150], 0],
                               '[18, 8]': [[2850, 1350], [150, 150], 0], '[18, 9]': [[2850, 1500], [150, 150], 0],
                               '[18, 10]': [[2850, 1650], [150, 150], 0], '[18, 11]': [[2850, 1800], [150, 150], 0],
                               '[19, 0]': [[3000, 150], [150, 150], 0], '[19, 1]': [[3000, 300], [150, 150], 0],
                               '[19, 2]': [[3000, 450], [150, 150], 0], '[19, 3]': [[3000, 600], [150, 150], 0],
                               '[19, 4]': [[3000, 750], [150, 150], 0], '[19, 5]': [[3000, 900], [150, 150], 0],
                               '[19, 6]': [[3000, 1050], [150, 150], 0], '[19, 7]': [[3000, 1200], [150, 150], 0],
                               '[19, 8]': [[3000, 1350], [150, 150], 0], '[19, 9]': [[3000, 1500], [150, 150], 0],
                               '[19, 10]': [[3000, 1650], [150, 150], 0], '[19, 11]': [[3000, 1800], [150, 150], 0],
                               '[20, 0]': [[3150, 150], [150, 150], 0], '[20, 1]': [[3150, 300], [150, 150], 0],
                               '[20, 2]': [[3150, 450], [150, 150], 0], '[20, 3]': [[3150, 600], [150, 150], 0],
                               '[20, 4]': [[3150, 750], [150, 150], 0], '[20, 5]': [[3150, 900], [150, 150], 0],
                               '[20, 6]': [[3150, 1050], [150, 150], 0], '[20, 7]': [[3150, 1200], [150, 150], 0],
                               '[20, 8]': [[3150, 1350], [150, 150], 0], '[20, 9]': [[3150, 1500], [150, 150], 0],
                               '[20, 10]': [[3150, 1650], [150, 150], 0], '[20, 11]': [[3150, 1800], [150, 150], 0],
                               '[21, 0]': [[3300, 150], [150, 150], 0], '[21, 1]': [[3300, 300], [150, 150], 0],
                               '[21, 2]': [[3300, 450], [150, 150], 0], '[21, 3]': [[3300, 600], [150, 150], 0],
                               '[21, 4]': [[3300, 750], [150, 150], 0], '[21, 5]': [[3300, 900], [150, 150], 0],
                               '[21, 6]': [[3300, 1050], [150, 150], 0], '[21, 7]': [[3300, 1200], [150, 150], 0],
                               '[21, 8]': [[3300, 1350], [150, 150], 0], '[21, 9]': [[3300, 1500], [150, 150], 0],
                               '[21, 10]': [[3300, 1650], [150, 150], 0], '[21, 11]': [[3300, 1800], [150, 150], 0],
                               '[22, 0]': [[3450, 150], [150, 150], 0], '[22, 1]': [[3450, 300], [150, 150], 0],
                               '[22, 2]': [[3450, 450], [150, 150], 0], '[22, 3]': [[3450, 600], [150, 150], 0],
                               '[22, 4]': [[3450, 750], [150, 150], 0], '[22, 5]': [[3450, 900], [150, 150], 0],
                               '[22, 6]': [[3450, 1050], [150, 150], 0], '[22, 7]': [[3450, 1200], [150, 150], 0],
                               '[22, 8]': [[3450, 1350], [150, 150], 0], '[22, 9]': [[3450, 1500], [150, 150], 0],
                               '[22, 10]': [[3450, 1650], [150, 150], 0], '[22, 11]': [[3450, 1800], [150, 150], 0],
                               '[23, 0]': [[3600, 150], [150, 150], 0], '[23, 1]': [[3600, 300], [150, 150], 0],
                               '[23, 2]': [[3600, 450], [150, 150], 0], '[23, 3]': [[3600, 600], [150, 150], 0],
                               '[23, 4]': [[3600, 750], [150, 150], 0], '[23, 5]': [[3600, 900], [150, 150], 0],
                               '[23, 6]': [[3600, 1050], [150, 150], 0], '[23, 7]': [[3600, 1200], [150, 150], 0],
                               '[23, 8]': [[3600, 1350], [150, 150], 0], '[23, 9]': [[3600, 1500], [150, 150], 0],
                               '[23, 10]': [[3600, 1650], [150, 150], 0], '[23, 11]': [[3600, 1800], [150, 150], 0]}

    alternate_dict_list_bak_01 = alternate_dict_list

    cells_shape = [24, 12]

    map_h, map_w = 3840, 2160
    map_size = [map_h, map_w]
    cell_size = [150, 150]

    total_time, start_in, start_out, period = 1400, 5, 50, 7

    # alternate_dict_list为可变对象会导致animation进行init时被修改
    # alternate_dict_list_init= {}
    # for key in alternate_dict_list.keys():
    #     alternate_dict_list_init[key]=alternate_dict_list[key]
    #
    # print(alternate_dict_list_init)
    alternate_dict_list_init = copy.deepcopy(alternate_dict_list)

    ani = animation.simAnimation(alternate_dict_list_init, map_size, cell_size, cells_shape)

    alter_shelf = alterShelf(alternate_dict_list, cells_shape, total_time, start_in, start_out, period)
    # sequence_update_cells = alter_shelf.unit_sequence()
    # print(sequence_update_cells)

    # random_update_cells = alter_shelf.unit_random_in(12)
    # print(random_update_cells)

    # 有问题值为24时出库无法完成
    # 属于设计问题设计时考虑len<=12设计的
    mult_random_update_cells = alter_shelf.mult_random_in(12)

    mult_update_cells = mult_random_update_cells

    # 动画展示
    # ani = animation.simAnimation()

    ani.show_simu(mult_update_cells, gif_save=0)

    print(alternate_dict_list_init)

    # with open('sequence_update_cells.txt','wb') as f:
    #     f.writelines(equence_update_cells)
    # f.close()

    # with open('sequence_update_cells.pk', 'wb') as f:
    #     pickle.dump(sequence_update_cells,f)
    # f.close()
